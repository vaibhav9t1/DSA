class Solution {
public:

     int solve(vector<int>& nums, int threshold) {
        
        int l=1, r = *max_element(nums.begin(),nums.end());
        int ans = -1;

        while(l<=r){

            int mid = l + (r-l)/2;
            int sum = 0;
            
            for(int i=0;i<nums.size();i++){
                sum += (nums[i]+mid-1)/mid;
            }

            if(sum <= threshold){
                ans = mid;
                r = mid - 1;
            }   
            else{
                l = mid + 1;
            }

        }

        return ans;

    }

    int smallestDivisor(vector<int>& nums, int threshold) {
        
        int l=1, r = *max_element(nums.begin(),nums.end());
        int ans = -1;

        for(int i=l;i<=r;i++){
            int sum = 0;
            for(int j=0;j<nums.size();j++){
                sum += (nums[j]+i-1)/i;
            }

            if(sum <= threshold){
                return i;
            }
        }
       return ans;
    }
};
