class Solution {
public:
    int minEatingSpeed(vector<int>& piles, int h) {
        long long int l = 1, r=*max_element(piles.begin(),piles.end());
        long long int ans = 0;

        while(l<=r){

            long long int mid = l + (r-l)/2;

            long long int count = 0;
            for(int i=0;i<piles.size();i++){
                count += ((long long int)piles[i]+mid-1)/mid;
            }

            if(count <= h){
                ans = mid;
                r = mid - 1;
            }
            else{
                l = mid + 1;
            }
        }
        return ans;
    }
};
