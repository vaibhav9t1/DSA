 
 // This function will count the number of students will get allocated with 
 // the books with current pages or mid value provided
 // If it is less then decrease Right pointer to increase
 // If it is greater than then increase Left pointer to decrease the mid Value
 // To find minimum number of pages assigned to students
 int CountStudents(int pages, vector<int>&A,int N){
        
        int student = 1;
        int sum = 0;
        
        for(int i=0;i<N;i++){
            if(sum+A[i] <= pages){
                sum += A[i];
            }
            else{
                student++;
                sum = A[i];
            }
        }
        
        return student;
        
    }

int findPages(vector<int>& A, int N, int M) {

    if(M > N) return -1;

    // The answer would be from Max(A) and Sum(A)
        // As there should be atleast one book allocated to each hence,
        // we take Min Limit as Max(A) as MinLimit
        
        int l = *max_element(A.begin(),A.end()), r = accumulate(A.begin(),A.end(),0);
        int ans = -1;
        
        while(l<=r){
            
            int mid = l + (r-l)/2;
            
            if(CountStudents(mid,A,N) == M){
                ans = mid;
                r = mid - 1;
            }
            // If less number of students allocated when mid value is high,
            // so decrease the low value
            else if(CountStudents(mid,A,N) < M){
                // ans = mid;
                r = mid - 1;
            }
            else{
                l = mid + 1;
            }
        }
        
        return l;

}
