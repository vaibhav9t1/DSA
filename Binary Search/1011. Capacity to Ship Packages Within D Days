class Solution {
public:
    int shipWithinDays(vector<int>& weights, int days) {
        
        // The range is between max element of weight to the total summation of elements in the array
        int l = *max_element(weights.begin(),weights.end()), r = std::accumulate(weights.begin(), weights.end(), 0);
        int ans = 0;

        // The starting point that is L = *max_element(weights) is very important, if we do not provide then it is not possible to get an answer, so always set a valid Range across..

        while(l<=r){

            int mid = l + (r-l)/2;
            int sum = 0, cnt = 1;

            for(int i=0;i<weights.size();i++){

                if(sum + weights[i] > mid){
                    cnt++;
                    sum = weights[i];
                }
                else{
                    sum += weights[i];
                }
                
            }

            if(cnt > days){
                l = mid + 1;
            }
            else{
                ans = mid;
                r = mid - 1;
            }
        }

        return l;

    }
};
