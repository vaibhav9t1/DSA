vector<vector<int>> PreInPost(TreeNode* root){

    vector<vector<int>> ans;
    vector<int> preorder,inorder,postorder;
    if(root == NULL) return {};

    stack<pair<TreeNode*, int>> st;
    st.push({root,1});

    while(!st.empty()){
        auto Node = st.top();
        st.pop();

        if(Node.second == 1){
            preorder.push_back(Node.first->val);
            Node.second++;
            st.push(Node);

            if(Node.first->left != NULL){
                st.push({Node.first->left,1});
            }
        }

        else if(Node.second == 2){
            inorder.push_back(Node.first->val);
            Node.second++;
            
            st.push(Node);

            if(Node.first->right != NULL){
                st.push({Node.first->right,1});
            }
        }

        else{
             postorder.push_back(Node.first->val);
        }

    }

    ans.push_back(preorder);
    ans.push_back(inorder);
    ans.push_back(postorder);

    return ans;

}
